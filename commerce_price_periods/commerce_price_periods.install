<?php

/**
 * @file
 * Contains install and update functions for price periods.
 */

/**
 * Implements hook_install().
 */
function commerce_price_periods_install() {
  $definition_update_manager = \Drupal::entityDefinitionUpdateManager();
  /** @var \Drupal\Core\Field\BaseFieldDefinition[] $fields */
  $fields = \Drupal::service('commerce_price_periods.price_periods')::getCustomFieldDefinitions();
  foreach ($fields as $name => $definition) {
    $definition_update_manager->installFieldStorageDefinition($name, 'commerce_product_variation', 'commerce_product', $definition);
  }
}

/**
 * Implements hook_uninstall().
 */
function commerce_price_periods_uninstall() {
  $definition_update_manager = \Drupal::entityDefinitionUpdateManager();
  if ($definition_update_manager->getEntityType('commerce_product')) {
    // Computed field definitions are not tracked by the entity definition
    // update manager, so remove them.
    $periods = \Drupal::service('commerce_price_periods.price_periods')::info();
    foreach ($periods as $period => $info) {
      $storage_definition = $definition_update_manager->getFieldStorageDefinition($period, 'commerce_product_variation');
      if ($storage_definition) {
        $definition_update_manager->uninstallFieldStorageDefinition($storage_definition);
      }
    }
  }
}
